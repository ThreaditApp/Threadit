syntax = "proto3";

package social;

option go_package = "gen/social-service/pb;pb";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

service SocialService {
  rpc FollowUser (FollowUserRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/social/follow/user"
			body: "*"
		};
	}

	rpc UnfollowUser (FollowUserRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/social/follow/user"
			body: "*"
		};
	}

	rpc GetFollowers (GetFollowersRequest) returns (GetFollowersResponse) {
		option (google.api.http) = {
			get: "/social/followers/{user_id}"
		};
	}

	rpc GetFollowing (GetFollowingRequest) returns (GetFollowingResponse) {
		option (google.api.http) = {
			get: "/social/following/{user_id}"
		};
	}

	rpc FollowCommunity (FollowCommunityRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/social/follow/community"
			body: "*"
		};
	}

	rpc UnfollowCommunity (FollowCommunityRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/social/follow/community"
			body: "*"
		};
	}

	rpc GetCommunityFollowers (GetCommunityFollowersRequest) returns (GetCommunityFollowersResponse) {
		option (google.api.http) = {
			get: "/social/community/followers/{community_id}"
		};
	}
}

message FollowUserRequest {
	string user_id = 1;
}

message GetFollowersRequest {
	string user_id = 1;
}

message GetFollowersResponse {
	repeated string user_ids = 1;
}

message GetFollowingRequest {
	string user_id = 1;
}

message GetFollowingResponse {
	repeated string user_ids = 1;
}

message FollowCommunityRequest {
	string community_id = 1;
}

message GetCommunityFollowersRequest {
	string community_id = 1;
}

message GetCommunityFollowersResponse {
	repeated string user_ids = 1;
}