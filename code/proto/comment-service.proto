syntax = "proto3";

package comment;

option go_package = "gen/comment-service/pb;pb";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "models.proto";

service CommentService {
  rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse) {
    option (google.api.http) = {
      get: "/comments"
    };
  }

  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {
    option (google.api.http) = {
      post: "/comments"
      body: "*"
    };
  }

  rpc GetComment(GetCommentRequest) returns (GetCommentResponse) {
    option (google.api.http) = {
      get: "/comments/{id}"
    };
  }

  rpc UpdateComment(UpdateCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/comments/{id}"
      body: "*"
    };
  }

  rpc DeleteComment(DeleteCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/comments/{id}"
    };
  }
}

message ListCommentsRequest {
  string thread_id = 1;
  optional int32 offset = 2;
  optional int32 limit = 3;
}

message ListCommentsResponse {
  repeated models.Comment comments = 1;
  optional int32 offset = 2;
  optional int32 limit = 3;
}

message CreateCommentRequest {
  string content = 2;
  optional string parent_id = 3;
  optional string thread_id = 4;
}

message CreateCommentResponse {
  string id = 1;
}

message GetCommentRequest {
  string id = 1;
}

message GetCommentResponse {
  models.Comment comment = 1;
}

message UpdateCommentRequest {
  string id = 1;
  string content = 2;
  optional int32 vote_offset = 3;
}

message DeleteCommentRequest {
  string id = 1;
}
