syntax = "proto3";

package db;

option go_package = "db-service/src/pb;pb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service DBService {
  // user crud operations
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser (GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty);
  rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty);

  // community crud operations
  rpc CreateCommunity (CreateCommunityRequest) returns (CreateCommunityResponse);
  rpc GetCommunity (GetCommunityRequest) returns (GetCommunityResponse);
  rpc UpdateCommunity (UpdateCommunityRequest) returns (google.protobuf.Empty);
  rpc DeleteCommunity (DeleteCommunityRequest) returns (google.protobuf.Empty);

  // thread crud operations
  rpc CreateThread (CreateThreadRequest) returns (CreateThreadResponse);
  rpc GetThread (GetThreadRequest) returns (GetThreadResponse);
  rpc UpdateThread (UpdateThreadRequest) returns (google.protobuf.Empty);
  rpc DeleteThread (DeleteThreadRequest) returns (google.protobuf.Empty);

  // comment crud operations
  rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse);
  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);
  rpc GetComment(GetCommentRequest) returns (GetCommentResponse);
  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);
  rpc DeleteComment(DeleteCommentRequest) returns (google.protobuf.Empty);
  rpc ReplyToComment(ReplyToCommentRequest) returns (ReplyToCommentResponse);

  // feed crud operations
  rpc GetUserFeed(GetUserFeedRequest) returns (GetUserFeedResponse);

  // follower operations
  rpc FollowUser (FollowUserRequest) returns (google.protobuf.Empty);
	rpc UnfollowUser (FollowUserRequest) returns (google.protobuf.Empty);
	rpc GetFollowers (GetFollowersRequest) returns (GetFollowersResponse);
	rpc GetFollowing (GetFollowingRequest) returns (GetFollowingResponse);
	rpc FollowCommunity (FollowCommunityRequest) returns (google.protobuf.Empty);
	rpc UnfollowCommunity (FollowCommunityRequest) returns (google.protobuf.Empty);
	rpc GetCommunityFollowers (GetCommunityFollowersRequest) returns (GetCommunityFollowersResponse);
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string bio = 3;
}

message CreateUserResponse {
  string id = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  string username = 1;
  string email = 2;
  string bio = 3;
}

message UpdateUserRequest {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string bio = 4;
}

message UpdateUserResponse {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string bio = 4;
}

message DeleteUserRequest {
  string id = 1;
}

message CreateCommunityRequest {
  string name = 1;
}

message CreateCommunityResponse {
  string id = 1;
}

message GetCommunityRequest {
  string id = 1;
}

message GetCommunityResponse {
  string name = 1;
}

message UpdateCommunityRequest {
  string id = 1;
  string name = 2;
}

message DeleteCommunityRequest {
  string id = 1;
}

message CreateThreadRequest {
  string title = 1;
  string content = 2;
}

message CreateThreadResponse {
  string id = 1;
}

message GetThreadRequest {
  string id = 1;
}

message GetThreadResponse {
  string title = 1;
  string content = 2;
}

message UpdateThreadRequest {
  string id = 1;
  optional string title = 2;
  optional string content = 3;
}

message DeleteThreadRequest {
  string id = 1;
}

message Feed {
  string id = 1;
  string type = 2;
  string community_id = 3;
  string title = 4;
  string content = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message GetUserFeedRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort = 3;
}

message GetUserFeedResponse {
  repeated Feed posts = 1;
  Pagination pagination = 2;
}


message FollowUserRequest {
  string user_id = 1;
}

message GetFollowersRequest {
  string user_id = 1;
}

message GetFollowersResponse {
  repeated string user_ids = 1;
}

message GetFollowingRequest {
  string user_id = 1;
}

message GetFollowingResponse {
  repeated string user_ids = 1;
}

message FollowCommunityRequest {
  string community_id = 1;
}

message GetCommunityFollowersRequest {
  string community_id = 1;
}

message GetCommunityFollowersResponse {
  repeated string user_ids = 1;
}

message Pagination {
  int32 current_page = 1;
  int32 per_page = 2;
  int32 total_items = 3;
  int32 total_pages = 4;
}
