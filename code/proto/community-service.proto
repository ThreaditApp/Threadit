syntax = "proto3";

package community;

option go_package = "gen/community-service/pb;pb";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "models/messages.proto";

service CommunityService {
  rpc ListCommunities(ListCommunitiesRequest) returns (ListCommunitiesResponse) {
    option (google.api.http) = {
      get: "/communities"
    };
  }

  rpc CreateCommunity(CreateCommunityRequest) returns (models.Community) {
    option (google.api.http) = {
      post: "/communities"
      body: "*"
    };
  }

  rpc GetCommunity(GetCommunityRequest) returns (models.Community) {
    option (google.api.http) = {
      get: "/communities/{id}"
    };
  }

  rpc UpdateCommunity(UpdateCommunityRequest) returns (models.Community) {
    option (google.api.http) = {
      patch: "/communities/{id}"
      body: "*"
    };
  }

  rpc DeleteCommunity(DeleteCommunityRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/communities/{id}"
    };
  }
}

message ListCommunitiesRequest {
  optional string name = 1;
  optional int32 offset = 2;
  optional int32 limit = 3;
}

message ListCommunitiesResponse {
  repeated models.Community communities = 1;
  optional int32 offset = 2;
  optional int32 limit = 3;
}

message CreateCommunityRequest {
  string name = 1;
}

message GetCommunityRequest {
  string id = 1;
}

message UpdateCommunityRequest {
  string id = 1;
  string name = 2;
}

message DeleteCommunityRequest {
  string id = 1;
}
