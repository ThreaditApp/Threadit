// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: db-service.proto

package pb

import (
	pb "gen/models/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCommunitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Offset        *int32                 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommunitiesRequest) Reset() {
	*x = ListCommunitiesRequest{}
	mi := &file_db_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommunitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommunitiesRequest) ProtoMessage() {}

func (x *ListCommunitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommunitiesRequest.ProtoReflect.Descriptor instead.
func (*ListCommunitiesRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListCommunitiesRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListCommunitiesRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListCommunitiesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListCommunitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Communities   []*pb.Community        `protobuf:"bytes,1,rep,name=communities,proto3" json:"communities,omitempty"`
	Offset        *int32                 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommunitiesResponse) Reset() {
	*x = ListCommunitiesResponse{}
	mi := &file_db_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommunitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommunitiesResponse) ProtoMessage() {}

func (x *ListCommunitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommunitiesResponse.ProtoReflect.Descriptor instead.
func (*ListCommunitiesResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListCommunitiesResponse) GetCommunities() []*pb.Community {
	if x != nil {
		return x.Communities
	}
	return nil
}

func (x *ListCommunitiesResponse) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListCommunitiesResponse) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type CreateCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommunityRequest) Reset() {
	*x = CreateCommunityRequest{}
	mi := &file_db_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunityRequest) ProtoMessage() {}

func (x *CreateCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommunityRequest.ProtoReflect.Descriptor instead.
func (*CreateCommunityRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommunityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateCommunityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommunityResponse) Reset() {
	*x = CreateCommunityResponse{}
	mi := &file_db_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunityResponse) ProtoMessage() {}

func (x *CreateCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommunityResponse.ProtoReflect.Descriptor instead.
func (*CreateCommunityResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCommunityResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommunityRequest) Reset() {
	*x = GetCommunityRequest{}
	mi := &file_db_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityRequest) ProtoMessage() {}

func (x *GetCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommunityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommunityRequest) Reset() {
	*x = UpdateCommunityRequest{}
	mi := &file_db_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityRequest) ProtoMessage() {}

func (x *UpdateCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommunityRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCommunityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCommunityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommunityRequest) Reset() {
	*x = DeleteCommunityRequest{}
	mi := &file_db_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommunityRequest) ProtoMessage() {}

func (x *DeleteCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommunityRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommunityRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCommunityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListThreadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommunityId   *string                `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Offset        *int32                 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *int32                 `protobuf:"varint,4,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThreadsRequest) Reset() {
	*x = ListThreadsRequest{}
	mi := &file_db_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThreadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThreadsRequest) ProtoMessage() {}

func (x *ListThreadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThreadsRequest.ProtoReflect.Descriptor instead.
func (*ListThreadsRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListThreadsRequest) GetCommunityId() string {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return ""
}

func (x *ListThreadsRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ListThreadsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListThreadsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListThreadsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Threads       []*pb.Thread           `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListThreadsResponse) Reset() {
	*x = ListThreadsResponse{}
	mi := &file_db_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThreadsResponse) ProtoMessage() {}

func (x *ListThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThreadsResponse.ProtoReflect.Descriptor instead.
func (*ListThreadsResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListThreadsResponse) GetThreads() []*pb.Thread {
	if x != nil {
		return x.Threads
	}
	return nil
}

type CreateThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommunityId   string                 `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThreadRequest) Reset() {
	*x = CreateThreadRequest{}
	mi := &file_db_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadRequest) ProtoMessage() {}

func (x *CreateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateThreadRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *CreateThreadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateThreadRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateThreadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateThreadResponse) Reset() {
	*x = CreateThreadResponse{}
	mi := &file_db_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadResponse) ProtoMessage() {}

func (x *CreateThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadResponse.ProtoReflect.Descriptor instead.
func (*CreateThreadResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateThreadResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadRequest) Reset() {
	*x = GetThreadRequest{}
	mi := &file_db_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadRequest) ProtoMessage() {}

func (x *GetThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadRequest.ProtoReflect.Descriptor instead.
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetThreadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *string                `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Content       *string                `protobuf:"bytes,4,opt,name=content,proto3,oneof" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateThreadRequest) Reset() {
	*x = UpdateThreadRequest{}
	mi := &file_db_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateThreadRequest) ProtoMessage() {}

func (x *UpdateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateThreadRequest.ProtoReflect.Descriptor instead.
func (*UpdateThreadRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateThreadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateThreadRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateThreadRequest) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type DeleteThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThreadRequest) Reset() {
	*x = DeleteThreadRequest{}
	mi := &file_db_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThreadRequest) ProtoMessage() {}

func (x *DeleteThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteThreadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListCommentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      *string                `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3,oneof" json:"thread_id,omitempty"`
	Offset        *int32                 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *int32                 `protobuf:"varint,3,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsRequest) Reset() {
	*x = ListCommentsRequest{}
	mi := &file_db_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsRequest) ProtoMessage() {}

func (x *ListCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListCommentsRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{14}
}

func (x *ListCommentsRequest) GetThreadId() string {
	if x != nil && x.ThreadId != nil {
		return *x.ThreadId
	}
	return ""
}

func (x *ListCommentsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListCommentsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ListCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*pb.Comment          `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommentsResponse) Reset() {
	*x = ListCommentsResponse{}
	mi := &file_db_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommentsResponse) ProtoMessage() {}

func (x *ListCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommentsResponse.ProtoReflect.Descriptor instead.
func (*ListCommentsResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{15}
}

func (x *ListCommentsResponse) GetComments() []*pb.Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      *string                `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3,oneof" json:"thread_id,omitempty"`
	CommentId     *string                `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3,oneof" json:"comment_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_db_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCommentRequest) GetThreadId() string {
	if x != nil && x.ThreadId != nil {
		return *x.ThreadId
	}
	return ""
}

func (x *CreateCommentRequest) GetCommentId() string {
	if x != nil && x.CommentId != nil {
		return *x.CommentId
	}
	return ""
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_db_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCommentResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_db_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *pb.Comment            `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentResponse) Reset() {
	*x = GetCommentResponse{}
	mi := &file_db_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResponse) ProtoMessage() {}

func (x *GetCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCommentResponse) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetCommentResponse) GetComment() *pb.Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	mi := &file_db_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_db_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_db_service_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_db_service_proto protoreflect.FileDescriptor

const file_db_service_proto_rawDesc = "" +
	"\n" +
	"\x10db-service.proto\x12\x02db\x1a\x1bgoogle/protobuf/empty.proto\x1a\x15models/messages.proto\"\x87\x01\n" +
	"\x16ListCommunitiesRequest\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x02 \x01(\x05H\x01R\x06offset\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x02R\x05limit\x88\x01\x01B\a\n" +
	"\x05_nameB\t\n" +
	"\a_offsetB\b\n" +
	"\x06_limit\"\x9b\x01\n" +
	"\x17ListCommunitiesResponse\x123\n" +
	"\vcommunities\x18\x01 \x03(\v2\x11.models.CommunityR\vcommunities\x12\x1b\n" +
	"\x06offset\x18\x02 \x01(\x05H\x00R\x06offset\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x01R\x05limit\x88\x01\x01B\t\n" +
	"\a_offsetB\b\n" +
	"\x06_limit\",\n" +
	"\x16CreateCommunityRequest\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\")\n" +
	"\x17CreateCommunityResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"%\n" +
	"\x13GetCommunityRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\x16UpdateCommunityRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"(\n" +
	"\x16DeleteCommunityRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xbf\x01\n" +
	"\x12ListThreadsRequest\x12&\n" +
	"\fcommunity_id\x18\x01 \x01(\tH\x00R\vcommunityId\x88\x01\x01\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x01R\x05title\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x03 \x01(\x05H\x02R\x06offset\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x04 \x01(\x05H\x03R\x05limit\x88\x01\x01B\x0f\n" +
	"\r_community_idB\b\n" +
	"\x06_titleB\t\n" +
	"\a_offsetB\b\n" +
	"\x06_limit\"?\n" +
	"\x13ListThreadsResponse\x12(\n" +
	"\athreads\x18\x01 \x03(\v2\x0e.models.ThreadR\athreads\"h\n" +
	"\x13CreateThreadRequest\x12!\n" +
	"\fcommunity_id\x18\x01 \x01(\tR\vcommunityId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\"&\n" +
	"\x14CreateThreadResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10GetThreadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"u\n" +
	"\x13UpdateThreadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\x05title\x18\x03 \x01(\tH\x00R\x05title\x88\x01\x01\x12\x1d\n" +
	"\acontent\x18\x04 \x01(\tH\x01R\acontent\x88\x01\x01B\b\n" +
	"\x06_titleB\n" +
	"\n" +
	"\b_content\"%\n" +
	"\x13DeleteThreadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x92\x01\n" +
	"\x13ListCommentsRequest\x12 \n" +
	"\tthread_id\x18\x01 \x01(\tH\x00R\bthreadId\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x02 \x01(\x05H\x01R\x06offset\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x03 \x01(\x05H\x02R\x05limit\x88\x01\x01B\f\n" +
	"\n" +
	"_thread_idB\t\n" +
	"\a_offsetB\b\n" +
	"\x06_limit\"C\n" +
	"\x14ListCommentsResponse\x12+\n" +
	"\bcomments\x18\x01 \x03(\v2\x0f.models.CommentR\bcomments\"\x93\x01\n" +
	"\x14CreateCommentRequest\x12 \n" +
	"\tthread_id\x18\x01 \x01(\tH\x00R\bthreadId\x88\x01\x01\x12\"\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tH\x01R\tcommentId\x88\x01\x01\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontentB\f\n" +
	"\n" +
	"_thread_idB\r\n" +
	"\v_comment_id\"'\n" +
	"\x15CreateCommentResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\x11GetCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"?\n" +
	"\x12GetCommentResponse\x12)\n" +
	"\acomment\x18\x01 \x01(\v2\x0f.models.CommentR\acomment\"Y\n" +
	"\x14UpdateCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"?\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId2\xea\a\n" +
	"\tDBService\x12J\n" +
	"\x0fListCommunities\x12\x1a.db.ListCommunitiesRequest\x1a\x1b.db.ListCommunitiesResponse\x12J\n" +
	"\x0fCreateCommunity\x12\x1a.db.CreateCommunityRequest\x1a\x1b.db.CreateCommunityResponse\x12:\n" +
	"\fGetCommunity\x12\x17.db.GetCommunityRequest\x1a\x11.models.Community\x12E\n" +
	"\x0fUpdateCommunity\x12\x1a.db.UpdateCommunityRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\x0fDeleteCommunity\x12\x1a.db.DeleteCommunityRequest\x1a\x16.google.protobuf.Empty\x12>\n" +
	"\vListThreads\x12\x16.db.ListThreadsRequest\x1a\x17.db.ListThreadsResponse\x12A\n" +
	"\fCreateThread\x12\x17.db.CreateThreadRequest\x1a\x18.db.CreateThreadResponse\x121\n" +
	"\tGetThread\x12\x14.db.GetThreadRequest\x1a\x0e.models.Thread\x12?\n" +
	"\fUpdateThread\x12\x17.db.UpdateThreadRequest\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\fDeleteThread\x12\x17.db.DeleteThreadRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\fListComments\x12\x17.db.ListCommentsRequest\x1a\x18.db.ListCommentsResponse\x12D\n" +
	"\rCreateComment\x12\x18.db.CreateCommentRequest\x1a\x19.db.CreateCommentResponse\x124\n" +
	"\n" +
	"GetComment\x12\x15.db.GetCommentRequest\x1a\x0f.models.Comment\x12A\n" +
	"\rUpdateComment\x12\x18.db.UpdateCommentRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\rDeleteComment\x12\x18.db.DeleteCommentRequest\x1a\x16.google.protobuf.EmptyB\x16Z\x14gen/db-service/pb;pbb\x06proto3"

var (
	file_db_service_proto_rawDescOnce sync.Once
	file_db_service_proto_rawDescData []byte
)

func file_db_service_proto_rawDescGZIP() []byte {
	file_db_service_proto_rawDescOnce.Do(func() {
		file_db_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_db_service_proto_rawDesc), len(file_db_service_proto_rawDesc)))
	})
	return file_db_service_proto_rawDescData
}

var file_db_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_db_service_proto_goTypes = []any{
	(*ListCommunitiesRequest)(nil),  // 0: db.ListCommunitiesRequest
	(*ListCommunitiesResponse)(nil), // 1: db.ListCommunitiesResponse
	(*CreateCommunityRequest)(nil),  // 2: db.CreateCommunityRequest
	(*CreateCommunityResponse)(nil), // 3: db.CreateCommunityResponse
	(*GetCommunityRequest)(nil),     // 4: db.GetCommunityRequest
	(*UpdateCommunityRequest)(nil),  // 5: db.UpdateCommunityRequest
	(*DeleteCommunityRequest)(nil),  // 6: db.DeleteCommunityRequest
	(*ListThreadsRequest)(nil),      // 7: db.ListThreadsRequest
	(*ListThreadsResponse)(nil),     // 8: db.ListThreadsResponse
	(*CreateThreadRequest)(nil),     // 9: db.CreateThreadRequest
	(*CreateThreadResponse)(nil),    // 10: db.CreateThreadResponse
	(*GetThreadRequest)(nil),        // 11: db.GetThreadRequest
	(*UpdateThreadRequest)(nil),     // 12: db.UpdateThreadRequest
	(*DeleteThreadRequest)(nil),     // 13: db.DeleteThreadRequest
	(*ListCommentsRequest)(nil),     // 14: db.ListCommentsRequest
	(*ListCommentsResponse)(nil),    // 15: db.ListCommentsResponse
	(*CreateCommentRequest)(nil),    // 16: db.CreateCommentRequest
	(*CreateCommentResponse)(nil),   // 17: db.CreateCommentResponse
	(*GetCommentRequest)(nil),       // 18: db.GetCommentRequest
	(*GetCommentResponse)(nil),      // 19: db.GetCommentResponse
	(*UpdateCommentRequest)(nil),    // 20: db.UpdateCommentRequest
	(*DeleteCommentRequest)(nil),    // 21: db.DeleteCommentRequest
	(*pb.Community)(nil),            // 22: models.Community
	(*pb.Thread)(nil),               // 23: models.Thread
	(*pb.Comment)(nil),              // 24: models.Comment
	(*emptypb.Empty)(nil),           // 25: google.protobuf.Empty
}
var file_db_service_proto_depIdxs = []int32{
	22, // 0: db.ListCommunitiesResponse.communities:type_name -> models.Community
	23, // 1: db.ListThreadsResponse.threads:type_name -> models.Thread
	24, // 2: db.ListCommentsResponse.comments:type_name -> models.Comment
	24, // 3: db.GetCommentResponse.comment:type_name -> models.Comment
	0,  // 4: db.DBService.ListCommunities:input_type -> db.ListCommunitiesRequest
	2,  // 5: db.DBService.CreateCommunity:input_type -> db.CreateCommunityRequest
	4,  // 6: db.DBService.GetCommunity:input_type -> db.GetCommunityRequest
	5,  // 7: db.DBService.UpdateCommunity:input_type -> db.UpdateCommunityRequest
	6,  // 8: db.DBService.DeleteCommunity:input_type -> db.DeleteCommunityRequest
	7,  // 9: db.DBService.ListThreads:input_type -> db.ListThreadsRequest
	9,  // 10: db.DBService.CreateThread:input_type -> db.CreateThreadRequest
	11, // 11: db.DBService.GetThread:input_type -> db.GetThreadRequest
	12, // 12: db.DBService.UpdateThread:input_type -> db.UpdateThreadRequest
	13, // 13: db.DBService.DeleteThread:input_type -> db.DeleteThreadRequest
	14, // 14: db.DBService.ListComments:input_type -> db.ListCommentsRequest
	16, // 15: db.DBService.CreateComment:input_type -> db.CreateCommentRequest
	18, // 16: db.DBService.GetComment:input_type -> db.GetCommentRequest
	20, // 17: db.DBService.UpdateComment:input_type -> db.UpdateCommentRequest
	21, // 18: db.DBService.DeleteComment:input_type -> db.DeleteCommentRequest
	1,  // 19: db.DBService.ListCommunities:output_type -> db.ListCommunitiesResponse
	3,  // 20: db.DBService.CreateCommunity:output_type -> db.CreateCommunityResponse
	22, // 21: db.DBService.GetCommunity:output_type -> models.Community
	25, // 22: db.DBService.UpdateCommunity:output_type -> google.protobuf.Empty
	25, // 23: db.DBService.DeleteCommunity:output_type -> google.protobuf.Empty
	8,  // 24: db.DBService.ListThreads:output_type -> db.ListThreadsResponse
	10, // 25: db.DBService.CreateThread:output_type -> db.CreateThreadResponse
	23, // 26: db.DBService.GetThread:output_type -> models.Thread
	25, // 27: db.DBService.UpdateThread:output_type -> google.protobuf.Empty
	25, // 28: db.DBService.DeleteThread:output_type -> google.protobuf.Empty
	15, // 29: db.DBService.ListComments:output_type -> db.ListCommentsResponse
	17, // 30: db.DBService.CreateComment:output_type -> db.CreateCommentResponse
	24, // 31: db.DBService.GetComment:output_type -> models.Comment
	25, // 32: db.DBService.UpdateComment:output_type -> google.protobuf.Empty
	25, // 33: db.DBService.DeleteComment:output_type -> google.protobuf.Empty
	19, // [19:34] is the sub-list for method output_type
	4,  // [4:19] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_db_service_proto_init() }
func file_db_service_proto_init() {
	if File_db_service_proto != nil {
		return
	}
	file_db_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_db_service_proto_msgTypes[1].OneofWrappers = []any{}
	file_db_service_proto_msgTypes[7].OneofWrappers = []any{}
	file_db_service_proto_msgTypes[12].OneofWrappers = []any{}
	file_db_service_proto_msgTypes[14].OneofWrappers = []any{}
	file_db_service_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_db_service_proto_rawDesc), len(file_db_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_service_proto_goTypes,
		DependencyIndexes: file_db_service_proto_depIdxs,
		MessageInfos:      file_db_service_proto_msgTypes,
	}.Build()
	File_db_service_proto = out.File
	file_db_service_proto_goTypes = nil
	file_db_service_proto_depIdxs = nil
}
