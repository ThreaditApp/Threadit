openapi: 3.0.0
info:
  title: thread-service.proto
  version: version not set
tags:
  - name: ThreadService
paths:
  /threads:
    get:
      operationId: ThreadService_ListThreads
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadListThreadsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: communityId
          in: query
          required: false
          schema:
            type: string
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
      tags:
        - ThreadService
    post:
      operationId: ThreadService_CreateThread
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/threadCreateThreadResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/threadCreateThreadRequest"
        required: true
      tags:
        - ThreadService
  "/threads/{id}":
    get:
      operationId: ThreadService_GetThread
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelsThread"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ThreadService
    delete:
      operationId: ThreadService_DeleteThread
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - ThreadService
    patch:
      operationId: ThreadService_UpdateThread
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThreadServiceUpdateThreadBody"
        required: true
      tags:
        - ThreadService
components:
  schemas:
    ThreadServiceUpdateThreadBody:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        voteOffset:
          type: integer
          format: int32
        numCommentsOffset:
          type: integer
          format: int32
    modelsThread:
      type: object
      properties:
        id:
          type: string
        communityId:
          type: string
        title:
          type: string
        content:
          type: string
        ups:
          type: integer
          format: int32
        downs:
          type: integer
          format: int32
        numComments:
          type: integer
          format: int32
    protobufAny:
      type: object
      properties:
        "@type":
          type: string
      additionalProperties: {}
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
    threadCreateThreadRequest:
      type: object
      properties:
        communityId:
          type: string
        title:
          type: string
        content:
          type: string
    threadCreateThreadResponse:
      type: object
      properties:
        id:
          type: string
    threadListThreadsResponse:
      type: object
      properties:
        threads:
          type: array
          items:
            $ref: "#/components/schemas/modelsThread"
