openapi: 3.1.0
info:
  title: Auth Service
  version: 1.0.0
  description: Auth Service API specification
servers:
  - url: https://api.threadit.com/v1/auth
    description: Production server
paths:
  /login:
    post:
      operationId: logIn
      summary: Log In
      responses:
        "200":
          description: Successfully logged in. Returns a JSON containing a token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
      parameters: []
      description: Log in the user and return a authentication token
      tags:
        - auth-service
      requestBody:
        required: true
        description: Login Request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
  /logout:
    post:
      operationId: logOut
      tags:
        - auth-service
      summary: Log Out
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
      security:
        - BearerBasic: []
      parameters: []
      description: Logout user by invalidating token
  /register:
    post:
      operationId: register
      tags:
        - auth-service
      summary: Register
      responses:
        "201":
          description: Successfully registered. Returns a JSON containing a token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
      parameters: []
      description: Creates a new Threadit user account
      requestBody:
        required: true
        description: Register request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
components:
  responses:
    BadRequest:
      description: The server could not understand the request due to invalid syntax.
        The client should modify the request and try again.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                  required:
                    - message
            required:
              - message
    InternalServerError:
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request. Report the issue to the support team if it
        persists.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    Unauthorized:
      description: Authentication is required to access the requested resource. The
        client must include the appropriate credentials.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    NoContent:
      description: The request was successful, but there is no content to return in
        the response.
      content:
        application/json:
          schema:
            type: "null"
  securitySchemes:
    BearerBasic:
      type: http
      scheme: Basic
      bearerFormat: Basic Access Authentication
      description: Authentication Token
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          examples:
            - john.doe@example.com
        password:
          type: string
          examples:
            - SecureP@ssw0rd
      required:
        - email
        - password
      description: Contains the user login information
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          examples:
            - eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      required:
        - token
      description: Contains a authentication token
    RegisterRequest:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - John Doe
        email:
          type: string
          examples:
            - john.doe@example.com
        password:
          type: string
          examples:
            - SecureP@ssw0rd
      required:
        - displayName
        - email
        - password
      description: Contains the user register information
tags:
  - name: auth-service
