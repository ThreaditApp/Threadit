openapi: 3.0.0
info:
  title: comment-service.proto
  version: version not set
tags:
  - name: CommentService
paths:
  /comments:
    get:
      operationId: CommentService_ListComments
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commentListCommentsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: threadId
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
      tags:
        - CommentService
    post:
      operationId: CommentService_CreateComment
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/commentCreateCommentResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/commentCreateCommentRequest"
        required: true
      tags:
        - CommentService
  "/comments/{id}":
    get:
      operationId: CommentService_GetComment
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/modelsComment"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - CommentService
    delete:
      operationId: CommentService_DeleteComment
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - CommentService
    patch:
      operationId: CommentService_UpdateComment
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentServiceUpdateCommentBody"
        required: true
      tags:
        - CommentService
components:
  schemas:
    CommentServiceUpdateCommentBody:
      type: object
      properties:
        content:
          type: string
        voteOffset:
          type: integer
          format: int32
        numCommentsOffset:
          type: integer
          format: int32
    commentCreateCommentRequest:
      type: object
      properties:
        content:
          type: string
        parentId:
          type: string
        parentType:
          $ref: "#/components/schemas/modelsCommentParentType"
    commentCreateCommentResponse:
      type: object
      properties:
        id:
          type: string
    commentListCommentsResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: "#/components/schemas/modelsComment"
    modelsComment:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        ups:
          type: integer
          format: int32
        downs:
          type: integer
          format: int32
        parentId:
          type: string
        parentType:
          $ref: "#/components/schemas/modelsCommentParentType"
        numComments:
          type: integer
          format: int32
    modelsCommentParentType:
      type: string
      enum:
        - THREAD
        - COMMENT
      default: THREAD
    protobufAny:
      type: object
      properties:
        "@type":
          type: string
      additionalProperties: {}
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
