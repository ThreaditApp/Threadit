openapi: 3.1.0
info:
  title: ThreadService API
  description: API for managing threads in the Threadit application.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: http://localhost:8000
    description: Local server
tags:
  - name: Threads
    description: Operations related to threads
paths:
  /threads:
    get:
      summary: Get a pagination list of threads
      operationId: listThreads
      tags:
        - Threads
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: community_id
          in: query
          description: Filter by community ID
          required: false
          schema:
            type: string
            format: uuid
        - name: author_id
          in: query
          description: Filter by author ID
          required: false
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          description: Search by title or content
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort by field
          required: false
          schema:
            type: string
            enum: [created_at, updated_at]
            default: created_at
        - name: order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        "200":
          description: List of threads
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Thread"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
    post:
      summary: Create a new thread
      operationId: createThread
      tags:
        - Threads
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThreadCreate"
      responses:
        "201":
          description: Thread created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Thread"
        "400":
          description: Request syntax is invalid
        "401":
          description: Token missing or invalid
        "422":
          description: Data validation failed
  /threads/{id}:
    get:
      summary: Get details of a specific thread
      operationId: getThread
      tags:
        - Threads
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Thread details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Thread"
        "404":
          description: Thread not found
    put:
      summary: Update an existing thread
      operationId: updateThread
      tags:
        - Threads
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThreadUpdate"
      responses:
        "200":
          description: Thread updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Thread"
        "400":
          description: Request syntax is invalid
        "401":
          description: Token missing or invalid
        "403":
          description: Action forbidden for user
        "404":
          description: Thread not found
        "422":
          description: Data validation failed
    delete:
      summary: Delete a thread
      operationId: deleteThread
      tags:
        - Threads
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Thread deleted
        "401":
          description: Token missing or invalid
        "403":
          description: Action forbidden for user
        "404":
          description: Thread not found
components:
  schemas:
    Pagination:
      type: object
      properties:
        current_page:
          type: integer
        per_page:
          type: integer
        total_items:
          type: integer
        total_pages:
          type: integer
    Thread:
      type: object
      properties:
        id:
          type: string
          format: uuid
        communityId:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ThreadCreate:
      type: object
      required:
        - communityId
        - title
        - content
      properties:
        communityId:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
    ThreadUpdate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
